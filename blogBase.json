{"singlePage": [], "startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "", "style": "", "indexScript": "", "indexStyle": "", "bottomText": "", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "title": "\u5c0f\u5c0f\u7684\u535a\u5ba2", "subTitle": "\u9a91\u9aa5\u4e00\u8dc3\u4e0d\u80fd\u5341\u6b65\uff0c\u9a7d\u9a6c\u5341\u9a7e\u4ea6\u80fd\u4e0d\u820d", "avatarUrl": "https://img.picui.cn/free/2024/06/25/6679b2b326191.jpg", "GMEEK_VERSION": "last", "postListJson": {"P5": {"htmlDir": "docs/post/bei-le-suo-jing-li.html", "labels": ["documentation"], "postTitle": "\u88ab\u52d2\u7d22\u7ecf\u5386", "postUrl": "post/bei-le-suo-jing-li.html", "postSourceUrl": "https://github.com/Air-ban/Air-ban.github.io/issues/5", "commentNum": 0, "wordCount": 830, "description": "# \u8d77\u56e0\r\n\u67d0\u5929\u665a\u4e0a\uff0c\u6211\u95f2\u6765\u65e0\u4e8b\uff0c\u7a81\u7136\u60f3\u8981\u6574\u7406\u4e00\u4e0b\u90a3\u6781\u5176\u6df7\u4e71\u7684\u90ae\u4ef6\uff0c\u5c31\u5728\u6574\u7406\u7684\u65f6\u5019\uff0c\u770b\u5230\u4e86\u4e00\u4e2a\u975e\u5e38\u4ee4\u6211\u8be7\u5f02\u7684\u90ae\u4ef6\uff0c\u91cc\u9762\u5305\u542b\u4e86\u6211\u6240\u6709\u7684*\u6d4f\u89c8\u5668*\u4fdd\u5b58\u7684\u5bc6\u7801\uff0c\u8fd8\u6709\u4e00\u5f20\u6211\u7684\u5c4f\u5e55\u622a\u56fe\uff0c\u5927\u81f4\u60c5\u51b5\u5982\u56fe\u6240\u793a\r\n![3f0c6ac2ef0c4d866802f6f81b1ccf05.png](https://s2.loli.net/2024/06/25/LDHJBITgcpXw7hU.png)\r\n\u6211\u5c31\u5f88\u8be7\u5f02\u554a\uff0c\u4ec0\u4e48\u60c5\u51b5\uff0c\u600e\u4e48\u6cc4\u9732\u7684\uff1f\u6211\u60f3\u554a\u60f3\uff0c\u8fd8\u662f\u6ca1\u60f3\u5230\uff0c\u4f46\u662f\u53ef\u4ee5\u770b\u5230\uff0c\u4e0b\u9762\u4ed6\u7ed9\u51fa\u4e86details\uff0c\u90a3\u5c31\u8ba9\u6211\u4eec\u4e00\u8d77\u770b\u770b\u91cc\u9762\u5199\u4e86\u4ec0\u4e48\r\n## \u79bb\u8c31\u7684details\r\n***\u5df2\u4f7f\u7528Google\u8fdb\u884c\u673a\u7ffb***\r\n![755662f6fa4cb72a9f943dfafaa5028b.png](https://s2.loli.net/2024/06/25/49hCDuUiQLKJAcz.png)\r\n\r\n\r\n\u597d\u7684\uff0c\u8fd9\u4e00\u5207\u8ba9\u6211\u66f4\u6478\u4e0d\u7740\u5934\u8111\u4e86\uff0c\u91cc\u9762\u4e00\u4e2a\u5f88\u725b\u903c\u54c4\u54c4\u7684\u4eba\u5a01\u80c1\u6211\u7ed9\u4ed6\u6bd4\u7279\u5e01\u94b1\u5305\u6253\u6b3e1050\u5200\uff0c\u4e0d\u7136\u62ff\u6211\u8d26\u53f7\u53bb\u4e71\u641e\uff0c\u6b64\u65f6\u6b64\u523b\uff0c\u6211\u7a81\u7136\u56de\u60f3\u5230\u524d\u51e0\u5929\uff0c\u5fae\u8f6f\u5f3a\u5236\u6211\u91cd\u7f6e\u5bc6\u7801\uff0c\u8fd9\u4e48\u770b\u6765\uff0c\u4ed6\u7684\u4e1c\u897f\u5e94\u8be5\u662f\u5df2\u7ecf\u8fc7\u671f\u7684\u4e86\uff0c\u6b64\u65f6\u6b64\u523b\u7684\u6211\u4e1d\u6beb\u4e0d\u614c\uff0c\u751a\u81f3\u5199\u4e86\u7bc7\u90ae\u4ef6\u9a82\u4e86\u56de\u53bb\uff0c\u4e0d\u8fc7\u8fd8\u662f\u8ba9\u6211\u7ec6\u601d\u6781\u6050\uff0c\u6bd5\u7adf\u6211\u5e73\u65e5\u91cc\u4e5f\u662f\u6bd4\u8f83\u559c\u6b22\u50cf\u8fd9\u6837\u76d1\u89c6\u4ed6\u4eba\u7684\uff0c\u4f46\u662f\u6211\u5e76\u6ca1\u6709\u4ec0\u4e48\u574f\u5fc3\u601d\uff0c\u4f46\u8fd9\u6b21\uff0c\u8ba9\u6211\u611f\u89c9\uff0c\u6740\u8f6f\u662f\u4e0d\u88c5\u4e0d\u884c\u4e86\uff0c\u6211\u4e4b\u524d\u7535\u8111\u4e00\u76f4\u662f**\u88f8\u5954\u7684\u72b6\u6001**\uff0c\u76f4\u5230\u8fd9\u6b21\uff0c\u6211\u91cd\u65b0\u628a\u706b\u7ed2\u4e0b\u56de\u6765\u4e86\r\n### \u542f\u793a\r\n\u5176\u5b9e\u4e5f\u4e0d\u80fd\u7b97\u4f5c\u662f\u542f\u793a\u5427\uff0c\u53ea\u80fd\u8bf4\u662f\u7ed9\u6211\u4eec\u4e00\u70b9\u5c0f\u63d0\u9192\uff0c\u8fd9\u5806\u5bc6\u7801\u6cc4\u9732\u4e86\uff0c\u6ca1\u4ec0\u4e48\uff0c\u4f46\u771f\u6b63\u91cd\u8981\u7684\u662f\u5bc6\u7801\u7684\u4e60\u60ef\uff0c\u73b0\u5728\u5bfc\u81f4\u6211\u4e0d\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b**\u6bd4\u8f83\u597d\u8bb0\u7684\u5bc6\u7801**\u4e86\uff0c\u5c82\u53ef\u4f11\uff0c\u4e8e\u662f\u4e4e\u6211\u6362\u4e86\u4e00\u5957\u65b0\u7684\u5bc6\u7801\u4f53\u7cfb\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u5957\u65b0\u7684\u5bc6\u7801\u4f53\u7cfb\u8fd8\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u6765\u9002\u5e94\r\n\r\n\u8fd9\u5bf9\u4e8e\u5927\u90e8\u5206\u4eba\u6765\u8bf4\uff0c\u5e94\u8be5\u662f\u6781\u5c0f\u6982\u7387\u9047\u5230\u7684\u4e8b\u4ef6\uff0c\u4f46\u6211\u5c31\u662f\u90a3\u4e2a\u5e78\u8fd0\u513f\uff0c\u867d\u7136\u4e0d\u77e5\u9053\u5e72\u4e86\u4ec0\u4e48\u597d\u4e8b\uff0c\u4f46\u603b\u5f52\u4e0d\u662f\u4ec0\u4e48\u597d\u4e8b\uff0c\u8fd8\u662f\u5e0c\u671b\u5927\u5bb6\u4ee5\u540e\u53ef\u4ee5\u591a\u591a\u52a0\u5f3a\u4e2a\u4eba\u4fe1\u606f\u4fdd\u62a4\u610f\u8bc6\uff0c\u51cf\u5c11\u6b64\u7c7b\u4e8b\u4ef6\u7684\u53d1\u751f\r\n\r\n\r\n\u3002", "top": 0, "createdAt": 1719250970, "style": "", "script": "", "ogImage": "https://img.picui.cn/free/2024/06/25/6679b2b326191.jpg", "createdDate": "2024-06-25", "dateLabelColor": "#bc4c00"}, "P6": {"htmlDir": "docs/post/an-zhuo-shou-ji-ROOT-jiao-cheng.html", "labels": ["documentation"], "postTitle": "\u5b89\u5353\u624b\u673aROOT\u6559\u7a0b", "postUrl": "post/an-zhuo-shou-ji-ROOT-jiao-cheng.html", "postSourceUrl": "https://github.com/Air-ban/Air-ban.github.io/issues/6", "commentNum": 0, "wordCount": 6455, "description": "# \u8bf4\u5728\u524d\u9762\r\n>\u6ca1\u7535\u8111\u7684\uff0c\u8bf7\u76f4\u63a5\u9000\u51fa\u6b64\u6559\u7a0b\uff0c\u8c22\u8c22\uff01\u5728ROOT\u7684\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\uff0c85%\u7684\u6b65\u9aa4\u90fd\u4f9d\u9760\u7535\u8111\uff0c\u6ca1\u7535\u8111\u662f\u4e0d\u884c\u7684\uff0c\u6240\u4ee5\u4e0d\u8981\u6d6a\u8d39\u81ea\u5df1\u7684\u65f6\u95f4\uff0c\u8c22\u8c22\uff01\r\n## \u4ec0\u4e48\u662froot\r\n\u6b64\u5904\u5f15\u7528\u767e\u79d1\r\n>\u624b\u673aROOT\u901a\u5e38\u662f\u6307\u9488\u5bf9Android\u7cfb\u7edf\u7684\u624b\u673a\u800c\u8a00\uff0c\u5b83\u4f7f\u5f97\u7528\u6237\u53ef\u4ee5\u83b7\u53d6Android\u64cd\u4f5c\u7cfb\u7edf\u7684\u8d85\u7ea7\u7528\u6237\u6743\u9650\u3002", "top": 0, "createdAt": 1719318237, "style": "", "script": "", "ogImage": "https://img.picui.cn/free/2024/06/25/6679b2b326191.jpg", "createdDate": "2024-06-25", "dateLabelColor": "#bc4c00"}, "P7": {"htmlDir": "docs/post/zi-dong-xiao-yuan-qiang-ji-qi-ren-kai-fa-ji-lu-\u2014\u2014-qi-zhi-yi.html", "labels": ["documentation"], "postTitle": "\u81ea\u52a8\u6821\u56ed\u5899\u673a\u5668\u4eba\u5f00\u53d1\u8bb0\u5f55\u2014\u2014\u5176\u4e4b\u4e00", "postUrl": "post/zi-dong-xiao-yuan-qiang-ji-qi-ren-kai-fa-ji-lu-%E2%80%94%E2%80%94-qi-zhi-yi.html", "postSourceUrl": "https://github.com/Air-ban/Air-ban.github.io/issues/7", "commentNum": 1, "wordCount": 5728, "description": "# \u524d\u8a00\r\n\u6700\u8fd1\uff0c\u53d1\u73b0\u5404\u79cd\u5947\u602a\u7684\u4e8b\u4ef6\u90fd\u53d1\u5728\u6821\u56ed\u5899\u4e0a\u4e86\uff0c\u4f46\u662f\u8fd9\u4e9b\u6821\u56ed\u5899\u5927\u591a\u6570\u90fd\u662f\u4e2a\u4eba\u8fd0\u8425\uff0c\u65e0\u6cd5\u786e\u4fdd\u4fe1\u606f\u5b89\u5168\u4ee5\u53ca\u516c\u5e73\u516c\u6b63\uff0c\u8fd9\u51e0\u5929\u770b\u5230\u4e24\u4e2a\u4eba\u5728\u5899\u4e0a\u6495\u903c\uff0c\u5f88\u660e\u663e\u5899\u4e3b\uff08\u8fd0\u8425\u6821\u56ed\u5899\u8d26\u53f7\u7684\u4eba\uff09\u6709\u660e\u663e\u7684\u504f\u8892\u8ff9\u8c61\uff0c\u6240\u4ee5\u6253\u7b97\u5f00\u53d1\u4e00\u4e2a\u7edd\u5bf9\u516c\u6b63\u4e14\u5c3d\u53ef\u80fd\u4e0d\u4f1a\u6cc4\u9732\u9690\u79c1\u7684\u6821\u56ed\u5899\u673a\u5668\u4eba\r\n## \u5f00\u53d1\u5386\u7a0b\r\n\u521a\u5f00\u59cb\uff0c\u6211\u662f\u5f88\u76f4\u63a5\u7684\u9762\u5411Google\u7f16\u7a0b\uff0c\u786e\u5b9e\u627e\u5230\u4e86\u5408\u9002\u7684\u811a\u672c\uff0c\u4f46\u662f\u5427\uff0c\u603b\u611f\u89c9\u5dee\u70b9\u610f\u601d\uff0c\u56e0\u4e3a\u53ea\u53ef\u4ee5\u53d1\u6587\u5b57\uff0c\u800c\u4e14\u4ee3\u7801\u4f3c\u4e4e\u8fd8\u6709\u4e9b\u8fc7\u65f6\uff0c\u4ee5\u4e0b\u662f\u4fee\u6539\u597d\u540e\u53ef\u4ee5\u76f4\u63a5\u7528\u7684\u4ee3\u7801\uff0c\u4f46\u662f\u53ea\u53ef\u4ee5\u7528\u4e8e**\u53d1\u9001\u6587\u5b57**\r\n\r\n```python\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.by import By\r\nfrom selenium.webdriver.support.ui import WebDriverWait\r\nfrom selenium.webdriver.support import expected_conditions as EC\r\nimport time\r\n\r\n# 1. \u6253\u5f00\u7f51\u7ad9\uff0c\u7a97\u53e3\u6700\u5927\u5316\r\ndriver = webdriver.Chrome()\r\ndriver.get('https://i.qq.com/')\r\ndriver.maximize_window()\r\n\r\n# \u70b9\u51fb\u767b\u5f55\r\ntry:\r\n    WebDriverWait(driver, 10).until(EC.frame_to_be_available_and_switch_to_it('login_frame'))\r\n    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, '//*[@id='img_out_\u6b64\u5904\u586b\u5199QQ\u53f7']'))).click()\r\n    driver.switch_to.default_content()\r\nexcept Exception as e:\r\n    print(f'An error occurred while trying to log in: {e}')\r\n    driver.quit()\r\n\r\n# \u70b9\u51fb\u8bf4\u8bf4\r\ntry:\r\n    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, '//*[@id='menuContainer']/div/ul/li[5]/a'))).click()\r\nexcept Exception as e:\r\n    print(f'An error occurred while trying to click on 'Shuoshuo': {e}')\r\n    driver.quit()\r\n\r\n# \u5207\u6362\u6846\u67b6\r\ntry:\r\n    element = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, 'iframe.app_canvas_frame')))\r\n    driver.switch_to.frame(element)\r\n    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.ID, '$1_substitutor_content'))).click()\r\n    WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID, '$1_content_content'))).send_keys('\u81ea\u52a8\u5316\u6d4b\u8bd5')\r\n    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.LINK_TEXT, '\u53d1\u8868'))).click()\r\nexcept Exception as e:\r\n    print(f'An error occurred while trying to post a status update: {e}')\r\n    driver.quit()\r\n\r\n# \u68c0\u67e5\u4e00\u4e0b\r\n# Add any necessary checks here, or simply wait for a certain amount of time to see the result\r\ntime.sleep(10)\r\n\r\n# Remember to close the driver after you're done\r\ndriver.quit()\r\n```\r\n\u4f46\u4f7f\u7528\u8fd9\u4e2a\u811a\u672c\uff0c\u9700\u8981\u7535\u8111\u4e0a\u5df2\u7ecf**\u767b\u9646QQ**\u7684\u524d\u63d0\u4e0b\uff0c\u800c\u4e14\u9700\u8981\u786e\u4fdd\u7f51\u7edc\u7545\u901a\uff0c\u6709\u6ca1\u6709\u4ec0\u4e48\u66f4\u597d\u7684\u529e\u6cd5\u5462\uff1f\u56e0\u4e3a\u6211\u9700\u8981\u53d1\u9001**\u56fe\u7247**\uff0c\u5355\u7eaf\u7684\u6587\u5b57\u5df2\u7ecf\u65e0\u6cd5\u6ee1\u8db3\u6211\u5566\uff0c\u4f46QQ\u53d1\u9001\u56fe\u7247\u9700\u8981\u91cd\u5b9a\u5411\u5230\u8d44\u6e90\u7ba1\u7406\u5668\u4e2d\u9009\u62e9\u56fe\u7247\uff0c\u96be\u529e\uff0c\u90a3\u5c31\u4f7f\u7528\u6846\u67b6\u81ea\u52a8\u8fdb\u884c\u70b9\u51fb\u64cd\u4f5c\u5427\uff0c\u7b80\u5355\u5199\u4e2apython\u811a\u672c\uff0c\u6765\u83b7\u53d6\u9f20\u6807\u7684\u4f4d\u7f6e\u4fe1\u606f\r\n```python\r\nfrom pynput import mouse\r\n\r\n# \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6765\u5904\u7406\u9f20\u6807\u70b9\u51fb\u4e8b\u4ef6\r\ndef on_click(x, y, button, pressed):\r\n    if pressed:\r\n        print(f'Mouse clicked at ({x}, {y}) with button {button}')\r\n\r\n# \u521b\u5efa\u9f20\u6807\u76d1\u542c\u5668\r\nwith mouse.Listener(on_click=on_click) as listener:\r\n    listener.join()\r\n```\r\n\u8fd9\u4e2a\u811a\u672c\u4f1a\u5b9e\u65f6\u8bb0\u5f55\u4f60\u9f20\u6807\u5f53\u524d\u70b9\u51fb\u7684\u4f4d\u7f6e\u5750\u6807\uff0c\u5e76\u8fd4\u56de\u5230\u63a7\u5236\u53f0\uff0c\u672c\u6765\u6253\u7b97\u5199\u4e2alog\u8bb0\u5f55\u7684\uff0c\u4f46\u662f\u540e\u6765\u6765\u60f3\u60f3\uff0c\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u4e5f\u4e0d\u662f\u4e0d\u884c\uff0c\u4e8e\u662f\u4e4e\uff0c\u901a\u8fc7\u65ad\u70b9\uff0c\u8fdb\u884c\u56fe\u7247\u4e0a\u4f20\u64cd\u4f5c\uff0c\u5e76\u4e14\u8bb0\u5f55\u5750\u6807\uff0c\u5728\u4e0a\u9762\u7684\u81ea\u52a8\u53d1\u9001\u6587\u5b57\u8bf4\u8bf4\u811a\u672c\u4e2d\u52a0\u5165\u4e86\u81ea\u52a8\u53d1\u9001\u56fe\u7247\u7684\u70b9\u51fb\u7a0b\u5e8f\uff0c\u81f3\u6b64\uff0c\u5b8c\u6574\u7684\u7a0b\u5e8f\u5982\u4e0b\r\n```python\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.by import By\r\nfrom selenium.webdriver.support.ui import WebDriverWait\r\nfrom selenium.webdriver.support import expected_conditions as EC\r\nimport pyautogui\r\nimport time\r\nfrom datetime import datetime\r\n\r\n# \u83b7\u53d6\u5f53\u524d\u7cfb\u7edf\u65f6\u95f4\u5e76\u683c\u5f0f\u5316\u4e3a\u5b57\u7b26\u4e32\r\ncurrent_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\r\n\r\nqq_number = input('\u8bf7\u8f93\u5165\u60a8\u7684QQ\u53f7\uff1a')\r\n\r\ndriver = webdriver.Chrome()\r\ndriver.get('https://i.qq.com/')\r\ndriver.maximize_window()\r\n\r\ntry:\r\n    WebDriverWait(driver, 10).until(EC.frame_to_be_available_and_switch_to_it('login_frame'))\r\n    qq_login_button_xpath = f'//*[@id='img_out_{qq_number}']'\r\n    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, qq_login_button_xpath))).click()\r\n    driver.switch_to.default_content()\r\nexcept Exception as e:\r\n    print(f'An error occurred while trying to log in: {e}')\r\n    driver.quit()\r\n\r\ntry:\r\n    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, '//*[@id='menuContainer']/div/ul/li[5]/a'))).click()\r\nexcept Exception as e:\r\n    print(f'An error occurred while trying to click on 'Shuoshuo': {e}')\r\n    driver.quit()\r\n\r\ntry:\r\n    element = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, 'iframe.app_canvas_frame')))\r\n    driver.switch_to.frame(element) #\u6b64\u53e5\u4ee3\u7801\u540e\u8fdb\u5165\u7f16\u8f91\u5668\r\n    time.sleep(2)\r\n    pyautogui.click(1070, 597) #\u76f8\u518c\r\n    time.sleep(1)\r\n    pyautogui.click(1066, 658) #\u672c\u5730\r\n    time.sleep(2)\r\n    pyautogui.click(902, 254)\r\n    pyautogui.click(902, 254)\r\n    time.sleep(1)\r\n    pyautogui.click(893, 168)\r\n    pyautogui.click(893, 168)\r\n    time.sleep(2)\r\n    pyautogui.click(225, 185)\r\n    pyautogui.click(814, 501)\r\n    time.sleep(2)\r\n    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.ID, '$1_substitutor_content'))).click()\r\n    WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID, '$1_content_content'))).send_keys(current_time + '\u66f4\u65b0')\r\n    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.LINK_TEXT, '\u53d1\u8868'))).click()\r\nexcept Exception as e:\r\n    print(f'An error occurred while trying to post a status update: {e}')\r\n    driver.quit()\r\n\r\ntime.sleep(3)\r\ndriver.quit()\r\n```\r\n\u4e3a\u4e86\u786e\u4fdd\u5b9a\u65f6\u53d1\u9001\uff0c\u8fd8\u5199\u4e86\u4e2a\u5b9a\u65f6\u7a0b\u5e8f\uff0c\u548c\u4e3b\u7a0b\u5e8f\u662f\u5206\u5f00\u7684\uff0c\u56e0\u4e3a\u518d\u5199\u8fdb\u53bb\uff0c\u611f\u89c9\u8fc7\u4e8e\u6df7\u4e71\u4e86\uff0c\u5b9a\u65f6\u7a0b\u5e8f\u5982\u4e0b\uff1a\r\n```python\r\nimport os\r\nimport time\r\n# \u6307\u5b9a\u65f6\u95f4\r\ntarget_time = time.time() + 5  # 5\u79d2\u540e\u6267\u884c\r\n\r\n# \u65e0\u9650\u5faa\u73af\uff0c\u7b49\u5f85\u5230\u8fbe\u6307\u5b9a\u65f6\u95f4\r\nwhile True:\r\n    current_time = time.time()\r\n    if current_time >= target_time:\r\n        # \u5230\u8fbe\u6307\u5b9a\u65f6\u95f4\uff0c\u6267\u884c\u4efb\u52a1\r\n        print('\u5230\u8fbe\u6307\u5b9a\u65f6\u95f4\uff0c\u5f00\u59cb\u6267\u884c\u4efb\u52a1')\r\n        os.startfile('release.exe')\r\n        break\r\n    else:\r\n        # \u7b49\u5f85\u5230\u8fbe\u6307\u5b9a\u65f6\u95f4\r\n        time.sleep(1)\r\n```\r\n\u5f53\u7136\uff0c\u611f\u89c9\u7ed9\u8fd9\u4e2a\u4e1c\u897f\u6700\u5916\u9762\u52a0\u4e2a```while True```\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u4f46\u662f\uff0c\u6211\u662f**\u61d2\u72d7**\uff0c\u63a5\u4e0b\u6765\uff0c\u9700\u8981\u83b7\u5f97\u7d20\u6750\uff0c\u5e76\u4e14\u505a\u5230\u5b9a\u70b9\u4e0a\u4f20\uff0c\u7d20\u6750\u5c06\u4ee5\u56fe\u7247\u7684\u5f62\u5f0f\u76f4\u63a5\u653e\u5728\u6211\u7684\u7535\u8111\u6587\u4ef6\u5939\u4e2d\uff0c\u901a\u8fc7\u4e0a\u6587\u7684\u9f20\u6807\u6a21\u62df\u70b9\u51fb\u6765\u5b9e\u73b0\uff0c\u81f3\u6b64\uff0c\u5dee\u4e0d\u591a\u662f\u5b8c\u6210\u4e86\uff0c\u63a5\u4e0b\u6765\u53ea\u9700\u8981\u67b6\u8bbe\u5230\u670d\u52a1\u5668\u4e0a\u5373\u53ef\r\n### \u4e00\u4e9b\u5c0f\u611f\u60f3\r\n\u672c\u4eba\u5bf9\u4e8e\u5404\u79cd\u6821\u5185\u5916\u516b\u5366\u5e76\u65e0\u591a\u5c11\u5174\u8da3\uff0c\u5f00\u53d1\u8fd9\u4e2a\u811a\u672c\u4e5f\u7eaf\u7cb9\u662f\u4e00\u65f6\u5174\u8d77\uff0c\u6211\u5e76\u4e0d\u611f\u89c9\u8fd9\u73a9\u610f\u6709\u4ec0\u4e48\u5b9e\u8d28\u6027\u4ef7\u503c\uff0c\u4f46\u662f\uff0c\u5f00\u53d1\u51fa\u6765\u786e\u5b9e\u662f\u4f1a\u7ed9\u4eba\u4ee5\u6210\u5c31\u611f\uff0c\u5f53\u7136\uff0c\u6211\u57283h\u5185\u5b8c\u6210\u4e86\u8fd9\u4e9b\u7684\u5f00\u53d1\uff0c\u5e76\u4e14\u57281h\u5199\u5b8c\u8fd9\u7bc7blog\r\n\r\n\u73b0\u5728\u6821\u5185\u7684\u5404\u79cd\u4e8b\u4ef6\u5c42\u51fa\u4e0d\u7a77\uff0c\u5c24\u5176\u662f\u5728\u4e00\u4e9b\u89c4\u6a21\u8f83\u5927\u7684\u5b66\u6821\uff0c\u4f46\u5f88\u660e\u663e\uff0c\u8fd9\u4e9b\u6821\u5916\u7684\u6821\u56ed\u5899\u6216\u8005\u8bba\u575b\u4e0d\u662f\u8001\u5e08\u53ef\u4ee5\u5e72\u6d89\u7684\u5730\u65b9\uff0c\u8001\u5e08\u4eec\u901a\u5e38\u53ea\u64c5\u957f**\u6559\u4e66\u80b2\u4eba**\uff0c\u5bf9\u4e8e\u4fe1\u606f\u6280\u672f\u5e76\u6ca1\u6709\u8fc7\u591a\u7684\u4e86\u89e3\uff0c\u4f46\u5e0c\u671b\u6709\u671d\u4e00\u65e5\uff0c\u5b66\u751f\u4eec\u53ef\u4ee5\u6446\u8131\u7531\u4e8e\u6821\u5916\u73af\u5883\u5bfc\u81f4\u7684\u60c5\u7eea\u5f02\u5e38\uff0c\u4e0d\u88ab\u65e0\u610f\u4e49\u7684\u8a00\u8bba\u653b\u51fb\r\n\r\n\u5171\u52c9\r\n\r\n## \u6316\u5751\r\n>\u4f60\u4e0d\u662f\u8bf4\u8981\u4fdd\u969c\u79c1\u5bc6\u5417\uff1f\u600e\u4e48\u4fdd\u969c\uff1f\r\n\r\n\u8fd9\u91cc\u672c\u4eba\u5927\u81f4\u601d\u60f3\u662f\u4f7f\u7528PGP\u7b7e\u540d\uff0c\u8ba9\u7a0b\u5e8f\u81ea\u5df1\u751f\u6210\u5bc6\u94a5\uff0c\u6211\u4e0d\u4f1a\u83b7\u53d6\u5bc6\u94a5\uff0c\u8ba9\u7a0b\u5e8f\u4e4b\u95f4\u4e92\u76f8\u5b8c\u6210\u52a0\u89e3\u5bc6\uff0c\u6211\u4f5c\u4e3a\u5f00\u53d1\u8005\uff0c\u670d\u52a1\u5668\u62e5\u6709\u8005\uff0c\u65e0\u6cd5\u67e5\u770b\u5177\u4f53\u5185\u5bb9\uff0c\u5e76\u4e14\u5728\u5b8c\u6210\u5bf9\u4e8e\u6307\u5b9a\u6295\u7a3f\u8005\u7684\u5185\u5bb9\u83b7\u53d6\u548c\u52a0\u5bc6\u540e\uff0c\u81ea\u52a8\u5220\u9664\u539f\u6587\uff0c\u53ea\u4fdd\u7559\u52a0\u5bc6\u540e\u7684\u526f\u672c\uff0c\u4ee5\u51cf\u5c11\u4fe1\u606f\u6cc4\u9732\u6240\u5e26\u6765\u7684\u5f71\u54cd\uff0c\u4e0d\u8fc7\u90a3\u90fd\u662f\u540e\u8bdd\u4e86\uff0c\u8bf4\u4e0d\u5b9a\u4f1a\u5728\u4e00\u5468\u5185\u7206\u809d\u51fa\u6765\uff1f\u6211\u4e0d\u77e5\u9053\uff0c\u518d\u8bf4\u5427\r\n\u3002", "top": 0, "createdAt": 1719420872, "style": "", "script": "", "ogImage": "https://img.picui.cn/free/2024/06/25/6679b2b326191.jpg", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P8": {"htmlDir": "docs/post/guan-yu-4096-wei-RSA-jia-mi-zai-xiao-yuan-qiang-de-yun-yong.html", "labels": ["documentation"], "postTitle": "\u5173\u4e8e4096\u4f4dRSA\u52a0\u5bc6\u5728\u6821\u56ed\u5899\u7684\u8fd0\u7528", "postUrl": "post/guan-yu-4096-wei-RSA-jia-mi-zai-xiao-yuan-qiang-de-yun-yong.html", "postSourceUrl": "https://github.com/Air-ban/Air-ban.github.io/issues/8", "commentNum": 0, "wordCount": 6633, "description": "# \u6821\u56ed\u5899\u52a0\u5bc6\u65b9\u5f0f\r\n\u672c\u6587\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u8be5\u6821\u56ed\u5899\u7684\u52a0\u5bc6\u65b9\u5f0f\uff0c\u4ee5\u53ca\u5b9e\u73b0\u65b9\u5f0f\u4ee5\u53ca\u5b9e\u73b0\u7ec6\u8282\r\n## \u6280\u672f\u7ec6\u8282\r\n\u7531\u4e8e\u8003\u8651\u5230\u4eba\u6570\uff0c\u8fd9\u91cc\u4f7f\u7528RSA\u52a0\u5bc6\uff0c\u5e76\u4e14\u662f4096\u7684RSA\u52a0\u5bc6\uff0c\u53ef\u4ee5\u6781\u5927\u63d0\u9ad8\u7528\u6237\u6570\u636e\u5b89\u5168\u6027\uff0c\u4ee5\u4e0b\u662f\u5b9e\u73b0RSA4096\u7684\u5177\u4f53\u65b9\u5f0f\r\n\r\n\u9996\u5148\uff0c\u9700\u8981\u83b7\u53d6\u79c1\u94a5\u4e0e\u5bc6\u94a5\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e00\u4e2a\u751f\u6210\u5668\uff0c\u501f\u7528python\u4e2d```cryptography```\u5e93\u6765\u8fdb\u884c\u6240\u6709\u6709\u5173RSA\u52a0\u89e3\u5bc6\u7684\u64cd\u4f5c\uff0c\u4ee5\u4e0b\u662f\u751f\u62104096\u4f4d\u79c1\u94a5\u548c\u516c\u94a5\u7684\u6e90\u4ee3\u7801\r\n```python\r\nfrom cryptography.hazmat.primitives.asymmetric import rsa\r\nfrom cryptography.hazmat.primitives import serialization\r\nfrom cryptography.hazmat.backends import default_backend\r\n\r\ndef generate_rsa_key_pair(key_size=4096):\r\n    private_key = rsa.generate_private_key(\r\n        public_exponent=65537,\r\n        key_size=key_size,\r\n        backend=default_backend()\r\n    )\r\n    public_key = private_key.public_key()\r\n    return private_key, public_key\r\n\r\ndef save_key(key, filename):\r\n    with open(filename, 'wb') as f:\r\n        f.write(key.private_bytes(\r\n            encoding=serialization.Encoding.PEM,\r\n            format=serialization.PrivateFormat.PKCS8,\r\n            encryption_algorithm=serialization.NoEncryption()\r\n        ))\r\n\r\ndef save_public_key(key, filename):\r\n    with open(filename, 'wb') as f:\r\n        f.write(key.public_bytes(\r\n            encoding=serialization.Encoding.PEM,\r\n            format=serialization.PublicFormat.SubjectPublicKeyInfo\r\n        ))\r\n\r\n# \u751f\u6210RSA\u5bc6\u94a5\u5bf9\r\nprivate_key, public_key = generate_rsa_key_pair()\r\n\r\n# \u4fdd\u5b58\u79c1\u94a5\u548c\u516c\u94a5\u5230\u6587\u4ef6\r\nsave_key(private_key, 'private_key.pem')\r\nsave_public_key(public_key, 'public_key.pem')\r\n\r\nprint('RSA key pair generated and saved.')\r\n```\r\n\u4e0a\u8ff0\u4ee3\u7801\u5747\u6dfb\u52a0\u4e86\u6ce8\u91ca\uff0c**\u7b80\u5355\u6613\u61c2**\uff0c\u56e0\u4e3a\u662f\u4f7f\u7528\u7cfb\u7edf\u968f\u673a\u6570\u751f\u6210\u7684\u5bc6\u94a5\u5bf9\uff0c\u5c31\u7b97\u662f\u6309\u7167\u8fd9\u4efd\u7a0b\u5e8f\u91cd\u65b0\u751f\u6210\uff0c\u4e5f\u65e0\u6cd5\u5f97\u5230\u4e00\u6837\u7684\u5bc6\u94a5\r\n\r\n\u5728RSA\u4e2d\uff0c\u516c\u94a5\u7528\u4e8e\u52a0\u5bc6\uff0c\u79c1\u94a5\u7528\u4e8e\u89e3\u5bc6\uff0c\u6240\u4ee5\uff0c\u52a0\u5bc6\u65f6\u4f7f\u7528\u516c\u94a5\uff0c\u89e3\u5bc6\u65f6\u4f7f\u7528\u79c1\u94a5\uff0c\u4ee5\u4e0b\u662f\u52a0\u5bc6\u4ee3\u7801\r\n\r\n```python\r\nfrom cryptography.hazmat.primitives import serialization, hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import padding, rsa\r\nfrom cryptography.hazmat.backends import default_backend\r\nimport os\r\n\r\ndef load_public_key(key_path: str):\r\n    with open(key_path, 'rb') as key_file:\r\n        public_key = serialization.load_pem_public_key(\r\n            key_file.read(),\r\n            backend=default_backend()\r\n        )\r\n    return public_key\r\n\r\ndef encrypt_file_rsa(public_key: rsa.RSAPublicKey, input_file_path: str, output_file_path: str):\r\n    with open(input_file_path, 'rb') as f:\r\n        data = f.read()\r\n\r\n    # \u7531\u4e8eRSA\u52a0\u5bc6\u7684\u5c40\u9650\u6027\uff0c\u8fd9\u91cc\u5047\u8bbe\u6587\u4ef6\u5185\u5bb9\u4e0d\u4f1a\u8d85\u8fc7\u516c\u94a5\u7684\u6700\u5927\u52a0\u5bc6\u5c3a\u5bf8\r\n    # \u5bf9\u4e8e\u5927\u6587\u4ef6\uff0c\u60a8\u5e94\u8be5\u4f7f\u7528\u5bf9\u79f0\u52a0\u5bc6\u6765\u52a0\u5bc6\u6587\u4ef6\u5185\u5bb9\uff0c\u7136\u540e\u53ea\u4f7f\u7528RSA\u52a0\u5bc6\u5bf9\u79f0\u5bc6\u94a5\r\n    encrypted_data = public_key.encrypt(\r\n        data,\r\n        padding.OAEP(\r\n            mgf=padding.MGF1(algorithm=hashes.SHA256()),\r\n            algorithm=hashes.SHA256(),\r\n            label=None\r\n        )\r\n    )\r\n\r\n    with open(output_file_path, 'wb') as f:\r\n        f.write(encrypted_data)\r\n\r\ndef main():\r\n    # \u52a0\u8f7d\u516c\u94a5\r\n    public_key_path = 'public_key.pem'\r\n    public_key = load_public_key(public_key_path)\r\n\r\n    # \u52a0\u5bc6\u6587\u4ef6 \u683c\u5f0f\u53ef\u4ee5\u662f\u4efb\u610f\u683c\u5f0f\uff0c\u5e76\u4e0d\u5c40\u9650\u4e8e\u8fd9\u4e24\u79cd\u683c\u5f0f\r\n    input_file_path = '\u52a0\u5bc6\u524d\u6587\u4ef6.txt'\r\n    output_file_path = '\u52a0\u5bc6\u540e\u6587\u4ef6.bin'\r\n    encrypt_file_rsa(public_key, input_file_path, output_file_path)\r\n\r\n    print(f'File '{input_file_path}' has been encrypted to '{output_file_path}'')\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\u8fd9\u4e00\u5207\u770b\u4e0a\u53bb\u771f\u7684\u662f\u5341\u5206\u7684\u7f8e\u5999\u4e14\u4f18\u96c5\uff0c\u6ca1\u8bdd\u8bf4\uff0c\u4e00\u5207\u52a0\u5bc6\u7684\u8fd0\u4f5c\u53ca\u5176\u5408\u7406\uff0c\u4f7f\u7528\u516c\u94a5\u8fdb\u884c\u6587\u4ef6\u52a0\u5bc6\uff0c\u5e76\u4e14\u52a0\u5bc6\u540e\u76f4\u63a5\u5220\u9664\u6e90\u6587\u4ef6\uff0c\u5bc6\u94a5\u4e22\u4e86\u5c31\u5f7b\u5e95\u5bc4\u4e86\uff0c\u6240\u4ee5\u4e0d\u8981\u8003\u8651\u4fe1\u606f\u6216\u6587\u4ef6\u6cc4\u9732\uff0c\u4f60\u4eec\u7684\u4fe1\u606f\u5b89\u5168\u662f\u6211\u552f\u4e00\u4fdd\u8bc1\u7684\u76ee\u6807\r\n>\u4f60\u4e0a\u6b21\u4e0d\u662f\u8bf4\u8981\u7528PGP\u5417\uff1f\u4e3a\u4ec0\u4e48\u4e0d\u7528\u4e86\uff1f\r\n\r\n\u9488\u5bf9\u8fd9\u4e2a\u95ee\u9898\uff0c\u76f8\u4fe1\u4f1a\u5199\u4ee3\u7801\u7684\u90fd\u4f1a\u9009\u62e9\u8f83\u4e3a\u8f7b\u677e\u4e14\u52a0\u5bc6\u6548\u679c\u597d\u7684\u52a0\u5bc6\u7b97\u6cd5\uff0c\u50cfRSA\u8fd9\u79cd\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\uff0c\u5c31\u5341\u5206\u7b26\u5408\u6211\u4eec\u7684\u9700\u6c42\uff0c\u5e76\u4e14\u5bf9\u4e8e\u5355\u4e00\u6587\u4ef6\u5e76\u4e0d\u9700\u8981\u6d88\u8017\u8fc7\u591a\u7684\u8d44\u6e90\r\n\r\n\u597d\u7684\uff0c\u8bf4\u5b8c\u4e86\u52a0\u5bc6\uff0c\u6211\u4eec\u8981\u6765\u8bf4\u8bf4\u89e3\u5bc6\uff0c\u4ee5\u4e0b\u662f\u4f7f\u7528RSA\u79c1\u94a5\u8fdb\u884c\u89e3\u5bc6\u7684\u4ee3\u7801\r\n```python\r\nfrom cryptography.hazmat.primitives import serialization, hashes\r\nfrom cryptography.hazmat.primitives.asymmetric import padding, rsa\r\nfrom cryptography.hazmat.backends import default_backend\r\nimport os\r\n\r\ndef load_private_key(key_path: str):\r\n    with open(key_path, 'rb') as key_file:\r\n        private_key = serialization.load_pem_private_key(\r\n            key_file.read(),\r\n            password=None,  # \u5982\u679c\u79c1\u94a5\u6709\u5bc6\u7801\uff0c\u8bf7\u5728\u6b64\u5904\u63d0\u4f9b\r\n            backend=default_backend()\r\n        )\r\n    return private_key\r\n\r\ndef decrypt_file_rsa(private_key: rsa.RSAPrivateKey, input_file_path: str, output_file_path: str):\r\n    with open(input_file_path, 'rb') as f:\r\n        encrypted_data = f.read()\r\n\r\n    # \u4f7f\u7528RSA\u79c1\u94a5\u89e3\u5bc6\u6570\u636e\r\n    decrypted_data = private_key.decrypt(\r\n        encrypted_data,\r\n        padding.OAEP(\r\n            mgf=padding.MGF1(algorithm=hashes.SHA256()),\r\n            algorithm=hashes.SHA256(),\r\n            label=None\r\n        )\r\n    )\r\n\r\n    with open(output_file_path, 'wb') as f:\r\n        f.write(decrypted_data)\r\n\r\ndef main():\r\n    # \u52a0\u8f7d\u79c1\u94a5\r\n    private_key_path = 'private_key.pem'\r\n    private_key = load_private_key(private_key_path)\r\n\r\n    # \u89e3\u5bc6\u6587\u4ef6\r\n    input_file_path = '\u52a0\u5bc6\u540e\u6587\u4ef6.bin'\r\n    output_file_path = '\u89e3\u5bc6\u540e\u6587\u4ef6.txt'\r\n    decrypt_file_rsa(private_key, input_file_path, output_file_path)\r\n\r\n    print(f'File '{input_file_path}' has been decrypted to '{output_file_path}'')\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\n\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u770b\u5230\uff0cRSA\u89e3\u5bc6\u4e5f\u662f\u975e\u5e38\u7684\u597d\u5199\u4e14\u901a\u4fd7\u6613\u61c2\uff0c\u8fd9\u4e09\u4e2a\u6a21\u5757\u5df2\u7ecf\u878d\u5408\u5728\u4e86\u6821\u56ed\u5899\u673a\u5668\u4eba\u4e2d\uff0c\u5e76\u4e14\u4f1a\u5728\u5185\u90e8\u8fdb\u884c\u4e92\u76f8\u8c03\u7528\uff0c\u6211\u662f\u5565\u4e5f\u4e0d\u77e5\u9053\uff0c\u6240\u4ee5\u8bf7\u5bf9\u4f60\u4eec\u7684\u4e2a\u4eba\u9690\u79c1\u653e100\u4e2a\u5fc3\r\n### RSA\u6280\u672f\u539f\u7406\r\n\u4e0b\u9762\u5c06\u4e3a\u5404\u4f4d\u5f7b\u5e95\u89e3\u91ca\u6e05\u695a\u4ec0\u4e48\u662fRSA\u52a0\u5bc6\uff0c\u4ee5\u53caRSA\u52a0\u5bc6\u7684\u539f\u7406\r\n#### \u52a0\u5bc6\r\nRSA\u7684\u52a0\u5bc6\u8fc7\u7a0b\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u901a\u5f0f\u6765\u8868\u8fbe\r\n>\u5bc6\u6587\uff1d\u660e\u6587EmodN\u5bc6\u6587\uff1d\u660e\u6587EmodN\r\n\r\n\u4e5f\u5c31\u662f\u8bf4RSA\u52a0\u5bc6\u662f\u5bf9\u660e\u6587\u7684E\u6b21\u65b9\u540e\u9664\u4ee5N\u540e\u6c42\u4f59\u6570\u7684\u8fc7\u7a0b\u3002", "top": 0, "createdAt": 1719458515, "style": "", "script": "", "ogImage": "https://img.picui.cn/free/2024/06/25/6679b2b326191.jpg", "createdDate": "2024-06-27", "dateLabelColor": "#bc4c00"}, "P9": {"htmlDir": "docs/post/ha-xi-peng-zhuang-yu-sheng-ri-gong-ji.html", "labels": ["good first issue"], "postTitle": "\u54c8\u5e0c\u78b0\u649e\u4e0e\u751f\u65e5\u653b\u51fb", "postUrl": "post/ha-xi-peng-zhuang-yu-sheng-ri-gong-ji.html", "postSourceUrl": "https://github.com/Air-ban/Air-ban.github.io/issues/9", "commentNum": 0, "wordCount": 3479, "description": "# \u54c8\u5e0c\u78b0\u649e\u4e0e\u751f\u65e5\u653b\u51fb\r\n\u672c\u6587\u7b80\u8981\u4ecb\u7ecd\u54c8\u5e0c\u78b0\u649e\u4ee5\u53ca\u5176\u4e2d\u7684\u751f\u65e5\u653b\u51fb\u6570\u5b66\u6a21\u578b\r\n## \u4e00\u3001\u54c8\u5e0c\u78b0\u649e\u662f\u4ec0\u4e48\uff1f\r\n\u6240\u8c13\u54c8\u5e0c\uff08hash\uff09\uff0c\u5c31\u662f\u5c06\u4e0d\u540c\u7684\u8f93\u5165\u6620\u5c04\u6210\u72ec\u4e00\u65e0\u4e8c\u7684\u3001\u56fa\u5b9a\u957f\u5ea6\u7684\u503c\uff08\u53c8\u79f0'\u54c8\u5e0c\u503c'\uff09\u3002", "top": 0, "createdAt": 1719593576, "style": "", "script": "<script>MathJax = {tex: {inlineMath: [[\"$\", \"$\"]]}};</script><script async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>", "ogImage": "https://img.picui.cn/free/2024/06/25/6679b2b326191.jpg", "createdDate": "2024-06-29", "dateLabelColor": "#bc4c00"}}, "singeListJson": {}, "labelColorDict": {"bug": "#d73a4a", "documentation": "#0075ca", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "question": "#d876e3", "wontfix": "#ffffff"}, "displayTitle": "\u5c0f\u5c0f\u7684\u535a\u5ba2", "faviconUrl": "https://img.picui.cn/free/2024/06/25/6679b2b326191.jpg", "ogImage": "https://img.picui.cn/free/2024/06/25/6679b2b326191.jpg", "homeUrl": "https://Air-ban.github.io", "prevUrl": "disabled", "nextUrl": "disabled"}